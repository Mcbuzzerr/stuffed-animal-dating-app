version: '3'
services:
  # next-frontend: # Not needed for now because the front end hardly exists yet
  #   container_name: next-frontend
  #   build: ./frontend
  #   ports:
  #     - "####:####"
  #   volumes:
  #     - .:/app
  #   environment:
  #     - NODE_ENV=development
  #     - CHOKIDAR_USEPOLLING=true
  #   command: "npm run dev"
  #   depends_on:
  #     - all the API services
  auth-api:
    container_name: auth-api
    build: ./auth-api
    ports:
      - "8000:8000"
    volumes:
      - ./auth-api:/app
    depends_on:
      - auth-db
      - eureka
  auth-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: auth-db
    ports:
      - "1433:1433"
    volumes:
      - /var/opt/mssql
    environment:
      SA_PASSWORD: "Password123"
      ACCEPT_EULA: "Y"
  profile-api:
    container_name: profile-api
    build: ./profile-api
    ports:
      - "8001:8000"
    volumes:
      - ./profile-api:/app
    depends_on:
      - profile-db
      - eureka
  profile-db:
    image: mongo:latest
    container_name: profile-db
    ports:
      - "27017:27017"
    volumes:
      - /var/lib/mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "pass"
      MONGO_INITDB_DATABASE: "profile"
  # message-api: # Not my part so I don't know what it'll actually look like
  #   container_name: message-api
  #   build: ./message-api
  #   ports:
  #     - "8003:8000"
  #   volumes:
  #     - ./message-api:/app
  #   # environment:
  #   depends_on:
  #     - message-db
  message-db:
    image: mongo:latest
    container_name: message-db
    ports:
      - "27018:27017"
    volumes:
      - /var/lib/mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: "root"
      MONGO_INITDB_ROOT_PASSWORD: "pass"
      MONGO_INITDB_DATABASE: "message"
  eureka:
    image: steeltoeoss/eureka-server:latest
    container_name: sada-eureka
    ports:
      - "8761:8761"
  gateway:
    container_name: ocelot-gateway
    build: ./dotnet-apigateway-ocelot
    ports:
      - "5041:80"
    depends_on:
      - eureka
  kafka-zookeeper:
    container_name: kafka-zookeeper
    image: confluentinc/cp-zookeeper:latest
    # ports:
    # - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka-broker:
    container_name: kafka-broker
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka-zookeeper
    ports:
      - "29092:29092" # Main port for Kafka
      # - "9092:9092"
      # - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092, PLAINTEXT_INTERNAL://kafka-broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_JMX_PORT: 9101
      # KAFKA_JMX_HOSTNAME: localhost
  email-service:
    container_name: email-service
    build: ./email-service
    # deploy:
    #   replicas: 3
    ports:
      - "803:8000"
    environment:
      - MAIL_PASSWORD = Ec33y8RvuksSq85BPS
      - MAIL_FROM = hillary.windler93@ethereal.email
      - MAIL_SERVER = smtp.ethereal.email
      - MAIL_PORT = 587
    volumes:
      - ./email-service:/app
